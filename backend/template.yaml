AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  book-store-app

  Book Store Serverless App

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: python3.8
    Handler: app.lambda_handler

Parameters:
  CognitoUserPoolName:
    Type: String
    Default: DevPool
  
  CognitoUserPoolClientName:
    Type: String
    Default: DevPoolClient

  CognitoUserPoolApiClientName:
    Type: String
    Default: DevApiPoolClient


Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !GetAtt MyCognitoUserPool.Arn
            Identity:
              Header: Authorization

  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  MyCognitoDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties: 
        Domain: mytest-321
        UserPoolId: !Ref MyCognitoUserPool

  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: !Ref CognitoUserPoolClientName
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      CallbackURLs:
        - https://mysite-321.s3.amazonaws.com/index.html
      LogoutURLs:
        - https://mysite-321.s3.amazonaws.com/index.html

  MyCognitoUserPoolApiClientResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      Identifier: api
      Name: Api Server
      Scopes: 
        - ScopeDescription: Generic Description
          ScopeName: "generic"
      UserPoolId: !Ref MyCognitoUserPool

  MyCognitoUserPoolApiClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: !Ref CognitoUserPoolApiClientName
      GenerateSecret: true
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthScopes:
        - api/generic

# Functions
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: get


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  CognitoUserPoolId:
    Description: "Cognito User Pool Id"
    Value: !Ref MyCognitoUserPool

  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client Id"
    Value: !Ref MyCognitoUserPoolClient

  CognitoUserPoolClientApiId:
    Description: "Cognito User Pool Client Api Id"
    Value: !Ref MyCognitoUserPoolApiClient

  HelloWorldApi:
    Description: "API Gateway endpoint URL for Dev stage for Hello World function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/hello/"

  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn

  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

    